initSidebarItems({"constant":[["MILESTONE_CACHE_RANGE",""],["MILESTONE_ISSUE_RATE_SECS","The node issue a milestone every 10 seconds."],["MILESTONE_MERKLE_PROOF_LENGTH",""],["MILESTONE_PUBLIC_KEY_LENGTH",""]],"enum":[["Essence",""],["Input",""],["MessagePayload","The message’s payload."],["MessageType","Message type."],["Output",""],["Payload","The payload of a message on the tangle."],["RemainderValueStrategy","The strategy to use for the remainder value management when sending funds."],["TransactionEssence","The transaction essence."],["TransactionInput","Transaction input."],["TransactionOutput","The transaction output."],["UnlockBlock",""],["ValueUnit","Possible Value units."]],"fn":[["is_internal",""],["milestone_cache",""],["transaction_inputs_belonging_to_account",""],["transaction_outputs_belonging_to_account",""]],"struct":[["IndexationPayload",""],["IotaMessage","A `Message` is the object that nodes gossip around the network."],["Message","A message definition."],["MessageBuilder",""],["MessageId","The BLAKE2b-256 hash of the byte contents of the message."],["MessageMigratedFundsEntry","Migrated funds entry."],["MessageMilestonePayload","Message milestone payload."],["MessageMilestonePayloadEssence","Milestone payload essence."],["MessageReceiptPayload","Receipt payload."],["MessageTailTransactionHash","Tail transaction hash."],["MessageTransactionPayload","A transaction payload."],["MigratedFundsEntry",""],["MilestoneIndex","A wrapper around a `u32` that represents a milestone index."],["MilestonePayload",""],["MilestonePayloadEssence",""],["MilestoneResponse","Milestone data."],["Parents","A `Message`’s `Parents` are the [`MessageId`]s of the transactions it directly approves."],["ReceiptPayload",""],["RegularEssence",""],["SignatureLockedDustAllowanceOutput",""],["SignatureLockedSingleOutput",""],["TailTransactionHash",""],["TransactionPayload",""],["TransactionRegularEssence","Regular essence."],["TransactionSignatureLockedDustAllowanceOutput","Dust allowance output."],["TransactionSignatureLockedSingleOutput","Signature locked single output."],["TransactionUtxoInput","UTXO input."],["Transfer","A transfer to make a transaction."],["TransferBuilder","A transfer to make a transaction."],["TransferOutput","Transfer output."],["TreasuryInput",""],["TreasuryOutput",""],["TreasuryTransactionPayload",""],["UtxoInput",""],["Value","The transaction Value struct."]],"type":[["MilestoneCache",""]]});